// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Snap.Hutao.Migrations
{
    public partial class DailyNoteEntry : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "daily_notes",
                columns: table => new
                {
                    InnerId = table.Column<Guid>(type: "TEXT", nullable: false),
                    UserId = table.Column<Guid>(type: "TEXT", nullable: false),
                    Uid = table.Column<string>(type: "TEXT", nullable: false),
                    DailyNote = table.Column<string>(type: "TEXT", nullable: true),
                    ResinNotifyThreshold = table.Column<int>(type: "INTEGER", nullable: false),
                    ResinNotifySuppressed = table.Column<bool>(type: "INTEGER", nullable: false),
                    HomeCoinNotifyThreshold = table.Column<int>(type: "INTEGER", nullable: false),
                    HomeCoinNotifySuppressed = table.Column<bool>(type: "INTEGER", nullable: false),
                    TransformerNotify = table.Column<bool>(type: "INTEGER", nullable: false),
                    TransformerNotifySuppressed = table.Column<bool>(type: "INTEGER", nullable: false),
                    DailyTaskNotify = table.Column<bool>(type: "INTEGER", nullable: false),
                    DailyTaskNotifySuppressed = table.Column<bool>(type: "INTEGER", nullable: false),
                    ExpeditionNotify = table.Column<bool>(type: "INTEGER", nullable: false),
                    ExpeditionNotifySuppressed = table.Column<bool>(type: "INTEGER", nullable: false),
                    ShowInHomeWidget = table.Column<bool>(type: "INTEGER", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_daily_notes", x => x.InnerId);
                    table.ForeignKey(
                        name: "FK_daily_notes_users_UserId",
                        column: x => x.UserId,
                        principalTable: "users",
                        principalColumn: "InnerId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_daily_notes_UserId",
                table: "daily_notes",
                column: "UserId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "daily_notes");
        }
    }
}
