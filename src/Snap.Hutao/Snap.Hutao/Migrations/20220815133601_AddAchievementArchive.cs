// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Snap.Hutao.Migrations
{
    public partial class AddAchievementArchive : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_achievements_users_UserId",
                table: "achievements");

            migrationBuilder.RenameColumn(
                name: "UserId",
                table: "achievements",
                newName: "ArchiveId");

            migrationBuilder.RenameIndex(
                name: "IX_achievements_UserId",
                table: "achievements",
                newName: "IX_achievements_ArchiveId");

            migrationBuilder.AddColumn<int>(
                name: "Status",
                table: "achievements",
                type: "INTEGER",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.CreateTable(
                name: "achievement_archives",
                columns: table => new
                {
                    InnerId = table.Column<Guid>(type: "TEXT", nullable: false),
                    Name = table.Column<string>(type: "TEXT", nullable: false),
                    IsSelected = table.Column<bool>(type: "INTEGER", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_achievement_archives", x => x.InnerId);
                });

            migrationBuilder.AddForeignKey(
                name: "FK_achievements_achievement_archives_ArchiveId",
                table: "achievements",
                column: "ArchiveId",
                principalTable: "achievement_archives",
                principalColumn: "InnerId",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_achievements_achievement_archives_ArchiveId",
                table: "achievements");

            migrationBuilder.DropTable(
                name: "achievement_archives");

            migrationBuilder.DropColumn(
                name: "Status",
                table: "achievements");

            migrationBuilder.RenameColumn(
                name: "ArchiveId",
                table: "achievements",
                newName: "UserId");

            migrationBuilder.RenameIndex(
                name: "IX_achievements_ArchiveId",
                table: "achievements",
                newName: "IX_achievements_UserId");

            migrationBuilder.AddForeignKey(
                name: "FK_achievements_users_UserId",
                table: "achievements",
                column: "UserId",
                principalTable: "users",
                principalColumn: "InnerId",
                onDelete: ReferentialAction.Cascade);
        }
    }
}
